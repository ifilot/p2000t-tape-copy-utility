name: build

on:
  push:
    branches: [ "master", "develop" ]
    tags:
    - 'v*'
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  # (optional) Create release
  create-release:
    runs-on: ubuntu-latest
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  build-program:
    runs-on: ubuntu-latest
    container: 
      image: z88dk/z88dk

    steps:
    - uses: actions/checkout@v3
    - name: Build tape-copy application
      run: |
        cd src
        sed -i 's/node[0-9]+/node2000000/' Makefile
        make
        truncate -s 16K main.rom
    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: main.rom
        path: src/main.rom

  patching-program:
    runs-on: ubuntu-latest
    needs: [build-program]

    steps:
    - name: Install programs
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-numpy
    - uses: actions/checkout@v3
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: main.rom
        path: ./
    - name: Set checksum key
      run: |
        python3 src/modheader.py main.rom
        mv main.rom TAPECOPY.BIN
    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: TAPECOPY.BIN
        path: ./TAPECOPY.BIN

  deploy-program-rom:
    runs-on: ubuntu-latest
    needs: [patching-program, create-release]
    permissions: write-all

    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: TAPECOPY.BIN
        path: ./
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: TAPECOPY.BIN
        asset_name: TAPECOPY.BIN
        asset_content_type: application/octet-stream